/* Map tool for selecting polygon region
 * mostly autogenerated boiler plate
 * 
 * 
 */

using ArcGIS.Core.CIM;
using ArcGIS.Core.Data;
using ArcGIS.Core.Data.Raster;
using ArcGIS.Core.Geometry;
using ArcGIS.Desktop.Catalog;
using ArcGIS.Desktop.Core;
using ArcGIS.Desktop.Editing;
using ArcGIS.Desktop.Extensions;
using ArcGIS.Desktop.Framework;
using ArcGIS.Desktop.Framework.Contracts;
using ArcGIS.Desktop.Framework.Dialogs;
using ArcGIS.Desktop.Framework.Threading.Tasks;
using ArcGIS.Desktop.Layouts;
using ArcGIS.Desktop.Mapping;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;

namespace TreeTaggerModule{
    internal class TreeTagPolygon : MapTool{
        public TreeTagPolygon(){
            IsSketchTool = true;
            SketchType = SketchGeometryType.Polygon;
            SketchOutputMode = SketchOutputMode.Map;
        }

        protected override Task OnToolActivateAsync(bool active){
            return base.OnToolActivateAsync(active);
        }

        private TreeTagSelectionWindow _treetagselectionwindow = null;

        protected override async Task<bool> OnSketchCompleteAsync(Geometry geometry){

            //get selected polygon
            Polygon selectedPolygon = (Polygon)geometry;
            //var points = selectedPolygon.Points;

            //create settings windows and pass the selected polygon
            if (_treetagselectionwindow != null)
                return false;
            _treetagselectionwindow = new TreeTagSelectionWindow(selectedPolygon);
            _treetagselectionwindow.Owner = FrameworkApplication.Current.MainWindow;
            _treetagselectionwindow.Closed += (o, e) => { _treetagselectionwindow = null; };
            _treetagselectionwindow.Show();

            return true;
        }
    }
}
